{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/HitStatus.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/attack-grid/attack-grid.component.html","webpack:///./src/app/attack-grid/attack-grid.component.ts","webpack:///./src/app/cell-drop-error-event-args.ts","webpack:///./src/app/damage-report-event-args.ts","webpack:///./src/app/fire-event-args.ts","webpack:///./src/app/game-board/game-board.component.html","webpack:///./src/app/game-board/game-board.component.ts","webpack:///./src/app/game-ended-event-args.ts","webpack:///./src/app/game-grid.ts","webpack:///./src/app/game-piece-bin.ts","webpack:///./src/app/game-piece.ts","webpack:///./src/app/game-service-bus.ts","webpack:///./src/app/game-started-event-args.ts","webpack:///./src/app/grid-cell.ts","webpack:///./src/app/grid-row.ts","webpack:///./src/app/hud-service-bus.ts","webpack:///./src/app/hud/hud.component.html","webpack:///./src/app/hud/hud.component.ts","webpack:///./src/app/load-game-event-args.ts","webpack:///./src/app/piece-bin/piece-bin.component.html","webpack:///./src/app/piece-bin/piece-bin.component.ts","webpack:///./src/app/piece-placed-event-args.ts","webpack:///./src/app/player-ready-event-args.ts","webpack:///./src/app/ship-grid/ship-grid.component.html","webpack:///./src/app/ship-grid/ship-grid.component.ts","webpack:///./src/app/turn-ended-event-args.ts","webpack:///./src/app/turn-played-event-args.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","export enum HitStatus {\r\n  Clear = 0,\r\n  Hit = 1,\r\n  Miss = 2\r\n}\r\n","\n<div style=\"text-align:center\">\n  <h1>\n    App componennt\n  </h1>\n</div>\n\n\n<app-game-board></app-game-board>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'WebApplication2';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { HudComponent } from './hud/hud.component';\nimport { ShipGridComponent } from './ship-grid/ship-grid.component';\nimport { AttackGridComponent } from './attack-grid/attack-grid.component';\nimport { PieceBinComponent } from './piece-bin/piece-bin.component';\nimport { GameBoardComponent } from './game-board/game-board.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    GameBoardComponent,\n    HudComponent,\n    ShipGridComponent,\n    AttackGridComponent,\n    PieceBinComponent,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<h2>\r\n  Attack Grid\r\n</h2>\r\n\r\n<table class=\"hud no-spacing\" style=\"display:table-cell\">\r\n  <tr *ngFor=\"let row of rows;index as i\">\r\n    <td *ngFor=\"let cell of row.cells;index as j\"\r\n        class=\"{{cell.cssClass}}\"\r\n        (click)=\"onFire($event, cell)\"\r\n        [ngClass]=\"{\r\n      'is-open': cell.hitStatus == hitStatuses.Open,\r\n      'is-hit': cell.hitStatus == hitStatuses.Hit,\r\n      'is-miss':cell.hitStatus == hitStatuses.Miss,\r\n      'hoverable':cell.hitStatus == 0\r\n    }\">\r\n      {{cell.text}}\r\n    </td>\r\n  </tr>\r\n</table>\r\n<div [hidden]=\"sunkenShips.length == 0\">\r\n  You sunk the following:\r\n  <ul>\r\n    <li *ngFor=\"let ship of sunkenShips\">{{ship.name}}</li>\r\n  </ul>\r\n</div>\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { gameGrid } from '../game-grid';\r\nimport { HudServiceBus } from '../hud-service-bus';\r\nimport { PlayerReadyEventArgs } from '../player-ready-event-args';\r\nimport { Subscription } from 'rxjs';\r\nimport { FireEventArgs } from '../fire-event-args';\r\nimport { gridCell } from '../grid-cell';\r\nimport { DamageReportEventArgs } from '../damage-report-event-args';\r\nimport { gamePiece } from '../game-piece';\r\nimport { HitStatus } from '../HitStatus';\r\nimport { LoadGameEventArgs } from '../load-game-event-args';\r\n@Component({\r\n  selector: 'app-attack-grid',\r\n  templateUrl: './attack-grid.component.html',\r\n  styleUrls: ['./attack-grid.component.css']\r\n})\r\n\r\nexport class AttackGridComponent extends gameGrid implements OnInit, OnDestroy {\r\n  public disabled: boolean;\r\n  loadHudSubscription: Subscription;\r\n  hudReadySubscription: Subscription;\r\n  handleDamagesubscription: Subscription;\r\n  sunkenShips: gamePiece[];\r\n\r\n  public hitStatuses = HitStatus;\r\n\r\n  constructor(private hudServiceBus: HudServiceBus) {\r\n    super();\r\n    this.loadInitialState();\r\n    this.loadHudSubscription = this.hudServiceBus.loadHudHandlers$.subscribe(eventArgs => { this.onHudLoad(eventArgs); });\r\n    this.hudReadySubscription = this.hudServiceBus.hudReadyHandlers$.subscribe(eventArgs => { this.onPlayerReady(eventArgs); });\r\n    this.handleDamagesubscription = this.hudServiceBus.damageReportHandlers$.subscribe(eventArgs => { this.onHandleDamageReport(eventArgs); });\r\n  }\r\n\r\n  ngOnInit() { }\r\n\r\n  ngOnDestroy() {\r\n    // prevent memory leak when component destroyed\r\n    this.loadHudSubscription.unsubscribe();\r\n    this.hudReadySubscription.unsubscribe();\r\n    this.handleDamagesubscription.unsubscribe();\r\n  }\r\n\r\n  loadInitialState() {\r\n    this.disabled = true;\r\n    this.sunkenShips = [];\r\n    this.reset();\r\n  }\r\n\r\n  /// The hud is reporting to this component that an initial state should be set.\r\n  onHudLoad(eventArgs: LoadGameEventArgs) {\r\n    this.loadInitialState();\r\n  }\r\n\r\n  /// The hud has told us that the player has locked their board in place and is ready to play\r\n  onPlayerReady(eventArgs: PlayerReadyEventArgs) {\r\n    for (var i: number = 1; i < this.rowCount; i++) {\r\n      for (var j: number = 1; j < this.cellCount; j++) {\r\n        this.rows[i].cells[j].cssClass = 'hoverable';\r\n        this.rows[i].cells[j].occupied = false;\r\n        this.rows[i].cells[j].hitStatus = 0;\r\n      }\r\n    }\r\n  }\r\n\r\n  /// Make a move against an oppenent\r\n  onFire(eventArgs, targetCell: gridCell) {\r\n    if (targetCell.row == 0 || targetCell.cell == 0) {\r\n      return;\r\n    }\r\n    if (targetCell.occupied) {\r\n      return;\r\n    }\r\n\r\n    let fireArgs = new FireEventArgs();\r\n    fireArgs.gridCell = targetCell;\r\n\r\n    this.hudServiceBus.onFire(fireArgs);\r\n\r\n    targetCell.occupied = true;\r\n  }\r\n\r\n  /// When an attack is made, this method will be called to determine the result of the attack\r\n  onHandleDamageReport(eventArgs: DamageReportEventArgs) {\r\n    var targetCell = eventArgs.targetCell;\r\n    this.rows[eventArgs.targetCell.row].cells[eventArgs.targetCell.cell].hitStatus = targetCell.hitStatus;\r\n    if (targetCell.hitStatus == 1) {\r\n      if (targetCell.gamePiece.hitParts.length == targetCell.gamePiece.length) {\r\n        this.sunkenShips.push(targetCell.gamePiece);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { gridCell } from \"./grid-cell\";\r\n\r\nexport class CellDropErrorEventArgs {\r\n  message: string;\r\n  gridCell: gridCell;\r\n}\r\n","import { gridCell } from \"./grid-cell\";\r\n\r\nexport class DamageReportEventArgs {\r\n  targetCell: gridCell;\r\n  targetPlayerId: string;\r\n}\r\n","import { gridCell } from \"./grid-cell\";\r\n\r\nexport class FireEventArgs {\r\n  gridCell: gridCell;\r\n}\r\n","<div style=\"width:100%;display:table;\">\r\n  <div style=\"display:table-row\">\r\n    <button (click)=\"randomGame()\">Random Game</button>\r\n    <div style=\"display:table-cell;\">\r\n      <app-hud [hudId]=\"'Player1'\" #hud1></app-hud>\r\n    </div>\r\n    <div style=\"display:table-cell;\">\r\n      <app-hud [hudId]=\"'Player2'\" #hud2></app-hud>\r\n      </div>\r\n  </div>\r\n</div>\r\n<div id=\"overlay\" [hidden]=\"hideGameMessage\">\r\n  <div id=\"text\">\r\n    <p [hidden]='gameWinner == \"\"'>{{gameWinner}} won the game.</p>\r\n    <br/>\r\n    <br/>\r\n    <button (click)=\"startNewGame()\">Start Another Game</button>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\r\nimport { PlayerReadyEventArgs } from '../player-ready-event-args';\r\nimport { Subscription, Observable, Subject } from 'rxjs';\r\nimport { GameServiceBus } from '../game-service-bus';\r\nimport { GameStartedEventArgs } from '../game-started-event-args';\r\nimport { TurnPlayedEventArgs } from '../turn-played-event-args';\r\nimport { TurnEndedEventArgs } from '../turn-ended-event-args';\r\nimport { GameEndedEventArgs } from '../game-ended-event-args';\r\nimport { LoadGameEventArgs } from '../load-game-event-args';\r\nimport { HudComponent } from '../hud/hud.component';\r\nimport { HitStatus } from '../HitStatus';\r\n\r\n@Component({\r\n  selector: 'app-game-board',\r\n  templateUrl: './game-board.component.html',\r\n  styleUrls: ['./game-board.component.css'],\r\n  providers: [GameServiceBus]\r\n})\r\n\r\nexport class GameBoardComponent implements OnInit, OnDestroy{\r\n  player1Ready: boolean;\r\n  player2Ready: boolean;\r\n  inProcess: boolean;\r\n  currentPlayerTurn: string;\r\n  gameWinner: string;\r\n  hideGameMessage: boolean;\r\n  autoPlay: boolean;\r\n  @ViewChild('hud1') hud1: HudComponent;\r\n  @ViewChild('hud2') hud2: HudComponent;\r\n\r\n  playerReadySubscription: Subscription;\r\n  gameEndedSubscription: Subscription;\r\n  turnEndedSubscription: Subscription;\r\n\r\n  ttt: NodeJS.Timer;\r\n\r\n  constructor(private gameServiceBus: GameServiceBus) {\r\n    this.playerReadySubscription = this.gameServiceBus.playerReadyHandlers$.subscribe(eventArgs => { this.onPlayerReady(eventArgs); });\r\n    this.turnEndedSubscription = this.gameServiceBus.turnEndedHandlers$.subscribe(eventArgs => { this.onTurnEnded(eventArgs); });\r\n    this.gameEndedSubscription = this.gameServiceBus.gameEndedHandlers$.subscribe(eventArgs => { this.onGameEnded(eventArgs); });\r\n    this.loadInitialState();\r\n  }\r\n  ngOnInit() { }\r\n\r\n  ngOnDestroy() {\r\n    // prevent memory leak when component destroyed\r\n    this.playerReadySubscription.unsubscribe();\r\n    this.gameEndedSubscription.unsubscribe();\r\n    this.turnEndedSubscription.unsubscribe();\r\n  }\r\n\r\n  loadInitialState() {\r\n    this.hideGameMessage = false;\r\n    this.gameWinner = '';\r\n    this.player1Ready = false;\r\n    this.player2Ready = false;\r\n    this.inProcess = false;\r\n    this.currentPlayerTurn = '';\r\n    this.gameWinner = '';\r\n  }\r\n\r\n  /// when a player's hud notifies us that they have locked in their board.\r\n  onPlayerReady(eventArgs: PlayerReadyEventArgs) {\r\n    if (eventArgs.playerId == \"Player1\") {\r\n      this.player1Ready = true;\r\n    }\r\n    if (eventArgs.playerId == \"Player2\") {\r\n      this.player2Ready = true;\r\n    }\r\n\r\n    if (this.player1Ready && this.player2Ready) {\r\n      this.inProcess = true;\r\n\r\n      let startArgs = new GameStartedEventArgs();\r\n      if (this.getRandomInt(1,100) % 2 == 0) {\r\n        startArgs.currentPlayerId = \"Player1\";\r\n      } else {\r\n        startArgs.currentPlayerId = \"Player2\";\r\n      }\r\n      this.currentPlayerTurn = startArgs.currentPlayerId;\r\n      this.gameServiceBus.onGameStarted(startArgs);\r\n    }\r\n  }\r\n  \r\n  /// After a turn has been completed by the player's hud\r\n  onTurnEnded(eventArgs: TurnEndedEventArgs) {\r\n    this.currentPlayerTurn = eventArgs.currentPlayerId;\r\n  }\r\n\r\n  /// When a hud has notified us that their ships are all sunk.\r\n  onGameEnded(eventArgs: GameEndedEventArgs) {\r\n    this.inProcess = false;\r\n    \r\n    this.gameWinner = eventArgs.winnerId;\r\n    this.hideGameMessage = false;\r\n    if (this.ttt) {\r\n      clearTimeout(this.ttt);\r\n    }\r\n  }\r\n\r\n  startNewGame() {\r\n    this.loadInitialState();\r\n    this.hideGameMessage = true;\r\n    this.gameServiceBus.onGameLoad(new LoadGameEventArgs());\r\n  }\r\n\r\n  randomGame() {\r\n    this.hideGameMessage = true;\r\n    this.autoPlay = true;\r\n    this.hud1.placeAll();\r\n    this.hud2.placeAll();\r\n\r\n    this.hud1.setReady();\r\n    this.hud2.setReady();\r\n    \r\n    this.ttt = setInterval(() => { this.onStartRandomGame(this.currentPlayerTurn); }, 50);\r\n  }\r\n\r\n  getRandomInt(min, max) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n  }\r\n\r\n  onStartRandomGame(currentPlayerId: string) {\r\n    let fireEventArgs = new TurnPlayedEventArgs();\r\n    let randomRow = -1;\r\n    let randomCell = -1;\r\n\r\n    console.log(currentPlayerId + ' is attacking from the game-board.');\r\n    fireEventArgs.currentPlayedId = currentPlayerId;\r\n\r\n    while (fireEventArgs.targetCell == null) {\r\n      randomRow = this.getRandomInt(1, 10);\r\n      randomCell = this.getRandomInt(1, 10);\r\n      \r\n      switch (currentPlayerId) {\r\n        case 'Player1':\r\n          if (this.hud1.localAttackGrid.rows[randomRow].cells[randomCell].occupied == false) {\r\n            fireEventArgs.targetCell = this.hud1.localAttackGrid.rows[randomRow].cells[randomCell];\r\n            break;\r\n          } else {\r\n            //console.log('occupied player 1 cell....skipping.');\r\n          }\r\n        case 'Player2':\r\n          if (this.hud2.localAttackGrid.rows[randomRow].cells[randomCell].occupied == false) {\r\n           fireEventArgs.targetCell = this.hud2.localAttackGrid.rows[randomRow].cells[randomCell];\r\n            break;\r\n          } else {\r\n            //console.log('occupied player 2 cell....skipping.');\r\n          }\r\n      }\r\n    }\r\n\r\n    this.gameServiceBus.onPlayerMove(fireEventArgs);\r\n\r\n  }\r\n}\r\n","export class GameEndedEventArgs {\r\n  winnerId: string;\r\n  loserId: string;\r\n}\r\n","import { gridRow } from \"./grid-row\";\r\nimport { gridCell } from \"./grid-cell\";\r\nimport { gamePiece } from \"./game-piece\";\r\nimport { HitStatus } from \"./HitStatus\";\r\n\r\nexport abstract class gameGrid {\r\n  rowCount: number;\r\n  cellCount: number;\r\n  rows: gridRow[];\r\n\r\n  constructor() {\r\n    this.rowCount = 11;\r\n    this.cellCount = 11;\r\n\r\n    this.setupGrid();\r\n  }\r\n\r\n  setupGrid() {\r\n    this.rows = [];\r\n    for (var i: number = 0; i < this.rowCount; i++) {\r\n      var newRow = new gridRow();\r\n\r\n      for (var j: number = 0; j < this.cellCount; j++) {\r\n        var newCell = new gridCell();\r\n        newCell.cell = j;\r\n        newCell.row = i;\r\n        if (i == 0) {\r\n          switch (j) {\r\n            case 1: newCell.text = 'A'; break;\r\n            case 2: newCell.text = 'B'; break;\r\n            case 3: newCell.text = 'C'; break;\r\n            case 4: newCell.text = 'D'; break;\r\n            case 5: newCell.text = 'E'; break;\r\n            case 6: newCell.text = 'F'; break;\r\n            case 7: newCell.text = 'G'; break;\r\n            case 8: newCell.text = 'H'; break;\r\n            case 9: newCell.text = 'I'; break;\r\n            case 10: newCell.text = 'J'; break;\r\n          }\r\n        } else {\r\n          if (j > 0) {\r\n            newCell.cssClass = 'pieceCell';\r\n          }\r\n        }\r\n        if (i > 0) {\r\n          if (j == 0) {\r\n            newCell.text = i.toString();\r\n          }\r\n        }\r\n        newRow.cells.push(newCell);\r\n      }\r\n      this.rows.push(newRow);\r\n    }\r\n  }\r\n\r\n  reset() {\r\n    for (let i: number = 1; i < this.rowCount; i++) {\r\n      for (let j: number = 1; j < this.cellCount; j++) {\r\n        this.rows[i].cells[j].unsetCell();\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { gamePiece } from \"./game-piece\";\r\n\r\nexport class GamePieceBin {\r\n  gamePieces: gamePiece[];\r\n  orientations: string[];\r\n\r\n  constructor() {\r\n    this.orientations = ['Horizontal', 'Vertical'];\r\n    this.gamePieces = [];\r\n  }\r\n\r\n  loadPieces() {\r\n    this.gamePieces.push(new gamePiece(0, \"Aircraft Carrier\", 5, false));\r\n    this.gamePieces.push(new gamePiece(1, \"Battleship\", 4, false));\r\n    this.gamePieces.push(new gamePiece(2, \"Cruiser\", 3, false));\r\n    this.gamePieces.push(new gamePiece(3, \"Destroyer\", 2, false));\r\n    this.gamePieces.push(new gamePiece(4, \"Destroyer\", 2, false));\r\n    this.gamePieces.push(new gamePiece(5, \"Submarine\", 1, false));\r\n    this.gamePieces.push(new gamePiece(6, \"Submarine\", 1, false));\r\n  }\r\n}\r\n","export class gamePiece {\r\n  length: number;\r\n  name: String;\r\n  vertical: boolean;\r\n  id: number;\r\n  hitParts: number[];\r\n  constructor(id: number, theName: string, theLength: number, isVertical: boolean) {\r\n    this.id = id;\r\n    this.length = theLength;\r\n    this.name = theName;\r\n    this.vertical = isVertical;\r\n    this.hitParts = [];\r\n  }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { PlayerReadyEventArgs } from './player-ready-event-args';\r\nimport { GameStartedEventArgs } from './game-started-event-args';\r\nimport { TurnPlayedEventArgs } from './turn-played-event-args';\r\nimport { TurnEndedEventArgs } from './turn-ended-event-args';\r\nimport { DamageReportEventArgs } from './damage-report-event-args';\r\nimport { GameEndedEventArgs } from './game-ended-event-args';\r\nimport { LoadGameEventArgs } from './load-game-event-args';\r\n\r\n@Injectable()\r\nexport class GameServiceBus {\r\n  private gameLoadHandler = new Subject<LoadGameEventArgs>();\r\n  private playerReadyHandler = new Subject<PlayerReadyEventArgs>();\r\n  private gameStartedHandler = new Subject<GameStartedEventArgs>();\r\n  private playerMoveHandler = new Subject<TurnPlayedEventArgs>();\r\n  private turnPlayHandler = new Subject<TurnPlayedEventArgs>();\r\n  private turnEndHandler = new Subject<TurnEndedEventArgs>();\r\n  private damageHandler = new Subject<DamageReportEventArgs>();\r\n  private gameEndedHandler = new Subject<GameEndedEventArgs>();\r\n\r\n  loadGameHandlers$ = this.gameLoadHandler.asObservable();\r\n  playerReadyHandlers$ = this.playerReadyHandler.asObservable();\r\n  gameStartedHandlers$ = this.gameStartedHandler.asObservable();\r\n  playerMoveHandlers$ = this.playerMoveHandler.asObservable();\r\n  turnPlayHandlers$ = this.turnPlayHandler.asObservable();\r\n  turnEndedHandlers$ = this.turnEndHandler.asObservable();\r\n  damageHandlers$ = this.damageHandler.asObservable();\r\n  gameEndedHandlers$ = this.gameEndedHandler.asObservable();\r\n\r\n  /// Set the game to its initial state\r\n  onGameLoad(eventArgs: LoadGameEventArgs) {\r\n    this.gameLoadHandler.next(eventArgs);\r\n  }\r\n\r\n  /// Player states that their board is locked and redy\r\n  onPlayerReady(eventArgs: PlayerReadyEventArgs) {\r\n    this.playerReadyHandler.next(eventArgs);\r\n  }\r\n\r\n  /// All players have locked their boards\r\n  onGameStarted(eventArgs: GameStartedEventArgs) {\r\n    this.gameStartedHandler.next(eventArgs);\r\n  }\r\n\r\n  /// Player \r\n  onPlayerMove(eventArgs: TurnPlayedEventArgs) {\r\n    this.playerMoveHandler.next(eventArgs);\r\n  }\r\n\r\n  onTurnPlayed(eventArgs: TurnPlayedEventArgs) {\r\n    this.turnPlayHandler.next(eventArgs);\r\n  }\r\n\r\n  onTurnEnded(eventArgs: TurnEndedEventArgs) {\r\n    this.turnEndHandler.next(eventArgs);\r\n  }\r\n\r\n  onDamageHandled(eventArgs: DamageReportEventArgs) {\r\n    this.damageHandler.next(eventArgs);\r\n  }\r\n\r\n  /// A player has lost the game.  Annouce results\r\n  onGameEnded(eventArgs: GameEndedEventArgs) {\r\n    this.gameEndedHandler.next(eventArgs);\r\n  }\r\n}\r\n","export class GameStartedEventArgs {\n  currentPlayerId: string;\n}\n","import { gamePiece } from \"./game-piece\";\r\nimport { HitStatus } from \"./HitStatus\";\r\n\r\nexport class gridCell {\r\n  text: string;\r\n  cssClass: string;\r\n  row: number;\r\n  cell: number;\r\n  occupied: boolean;\r\n  gamePiece: gamePiece;\r\n  gamePieceIndex: number;\r\n  hitStatus: HitStatus; // 0 - clear, 1 - hit, 2 missed\r\n  constructor() {\r\n    this.occupied = false;\r\n  }\r\n\r\n  unsetCell() {\r\n    this.text = '';\r\n    this.occupied = false;\r\n    this.gamePiece = null;\r\n    this.gamePieceIndex = -1;\r\n    this.hitStatus = HitStatus.Clear;\r\n  }\r\n}\r\n","import { gridCell } from \"./grid-cell\";\r\n\r\nexport class gridRow {\r\n  cells: gridCell[];\r\n\r\n  constructor() {\r\n    this.cells = [];\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { PiecePlacedEventArgs } from './piece-placed-event-args';\r\nimport { Subject } from 'rxjs';\r\nimport { CellDropErrorEventArgs } from './cell-drop-error-event-args';\r\nimport { PlayerReadyEventArgs } from './player-ready-event-args';\r\nimport { FireEventArgs } from './fire-event-args';\r\nimport { TurnPlayedEventArgs } from './turn-played-event-args';\r\nimport { DamageReportEventArgs } from './damage-report-event-args';\r\nimport { LoadGameEventArgs } from './load-game-event-args';\r\n\r\n@Injectable()\r\nexport class HudServiceBus {\r\n  private loadHudHandler = new Subject<LoadGameEventArgs>();\r\n  private piecePlacedHandler = new Subject<PiecePlacedEventArgs>();\r\n  private pieceNotPlacedHandler = new Subject<CellDropErrorEventArgs>();\r\n  private hudReadyHandler = new Subject<PlayerReadyEventArgs>();\r\n  private fireHandler = new Subject<FireEventArgs>();\r\n  private defendHandler = new Subject<TurnPlayedEventArgs>();\r\n  private damageHandler = new Subject<DamageReportEventArgs>();\r\n  private damageReportHandler = new Subject<DamageReportEventArgs>();\r\n  private pieceSunkHandler = new Subject<DamageReportEventArgs>();\r\n  private pieceReturnedHandler = new Subject<PiecePlacedEventArgs>();\r\n  private allPiecesSunkHandler = new Subject<PlayerReadyEventArgs>();\r\n\r\n  loadHudHandlers$ = this.loadHudHandler.asObservable();\r\n  piecePlaceHandlers$ = this.piecePlacedHandler.asObservable();\r\n  pieceNotPlacedHandlers$ = this.pieceNotPlacedHandler.asObservable();\r\n  hudReadyHandlers$ = this.hudReadyHandler.asObservable();\r\n  attackHandlers$ = this.fireHandler.asObservable();\r\n  defendHandlers$ = this.defendHandler.asObservable();\r\n  damageHandlers$ = this.damageHandler.asObservable();\r\n  damageReportHandlers$ = this.damageReportHandler.asObservable();\r\n  pieceSunkHandlers$ = this.pieceSunkHandler.asObservable();\r\n  pieceReturnedHandlers$ = this.pieceReturnedHandler.asObservable();\r\n  allPiecesSunkHandlers$ = this.allPiecesSunkHandler.asObservable();\r\n\r\n  /// Set this hud to an initial state\r\n  onHudLoaded(eventArgs: LoadGameEventArgs) {\r\n    this.loadHudHandler.next(eventArgs);\r\n  }\r\n\r\n  /// Player has placed a piece onto their playing board\r\n  onPiecePlaced(eventArgs: PiecePlacedEventArgs) {\r\n    this.piecePlacedHandler.next(eventArgs);\r\n  }\r\n\r\n  /// If the piece is moved off the ship board, notify other components\r\n  onPieceReturned(eventArgs: PiecePlacedEventArgs) {\r\n    this.pieceReturnedHandler.next(eventArgs);\r\n  }\r\n\r\n  /// The piece did not go onto the playing board\r\n  onPieceNotPlaced(eventArgs: CellDropErrorEventArgs) {\r\n    this.pieceNotPlacedHandler.next(eventArgs);\r\n  }\r\n\r\n  onHudReady(eventArgs: PlayerReadyEventArgs) {\r\n    this.hudReadyHandler.next(eventArgs);\r\n  }\r\n\r\n  /// A move from the attack grid took place\r\n  onFire(eventArgs: FireEventArgs) {\r\n    this.fireHandler.next(eventArgs);\r\n  }\r\n\r\n  /// When an attack from another player occurs, let all components know of the attack\r\n  onDefend(eventArgs: TurnPlayedEventArgs) {\r\n    this.defendHandler.next(eventArgs);\r\n  }\r\n\r\n  /// When the components had absorbed their damage, report back out to everyone what the damage was\r\n  onDamageReport(eventArgs: DamageReportEventArgs) {\r\n    this.damageHandler.next(eventArgs);\r\n  }\r\n  /// When the game bus tells the hud about the damage reported from another player, disseminate to all of this hud's components\r\n  onHandleDamageReport(eventArgs: DamageReportEventArgs) {\r\n    this.damageReportHandler.next(eventArgs);\r\n  }\r\n\r\n  /// When a piece is completely sunk, announce it to the hud\r\n  onHandlePieceSunk(eventArgs: DamageReportEventArgs) {\r\n    this.pieceSunkHandler.next(eventArgs);\r\n  }\r\n\r\n  /// When all the player's pieces are sunk, notify the HUD\r\n  onAllPiecesSunk(eventArgs: PlayerReadyEventArgs) {\r\n    this.allPiecesSunkHandler.next(eventArgs);\r\n  }\r\n}\r\n","<div [class.currentTurn]=\"inProcess && currentTurn\" [class.notCurrentTurn]=\"inProcess && !currentTurn\">\r\n  Hub player Id : {{ hudId}}\r\n  <h2 style=\"color:red\" [hidden]=\"gameMessage == ''\">{{gameMessage}}</h2>\r\n  <app-attack-grid #attackGrid [ngClass]=\"{'notCurrentTurn': !inProcess && !currentTurn}\"></app-attack-grid>\r\n  <app-piece-bin [hidden]=\"pieceBinHidden\" [hudId]=\"hudId\" #pieceBin></app-piece-bin>\r\n  <button (click)=\"placeAll()\" value=\"Place All\" [hidden]=\"!placeAllVisible\">Place All</button>\r\n  <app-ship-grid #shipGrid [hudId]=\"hudId\"></app-ship-grid>\r\n</div>\r\n","import { Component, OnInit, Input, OnDestroy, ViewChild } from '@angular/core';\r\nimport { HudServiceBus } from '../hud-service-bus';\r\nimport { PlayerReadyEventArgs } from '../player-ready-event-args';\r\nimport { Subscription } from 'rxjs';\r\nimport { GameServiceBus } from '../game-service-bus';\r\nimport { GameStartedEventArgs } from '../game-started-event-args';\r\nimport { TurnPlayedEventArgs } from '../turn-played-event-args';\r\nimport { FireEventArgs } from '../fire-event-args';\r\nimport { TurnEndedEventArgs } from '../turn-ended-event-args';\r\nimport { ShipGridComponent } from '../ship-grid/ship-grid.component';\r\nimport { PieceBinComponent } from '../piece-bin/piece-bin.component';\r\nimport { DamageReportEventArgs } from '../damage-report-event-args';\r\nimport { GameEndedEventArgs } from '../game-ended-event-args';\r\nimport { LoadGameEventArgs } from '../load-game-event-args';\r\nimport { AttackGridComponent } from '../attack-grid/attack-grid.component';\r\n\r\n@Component({\r\n  selector: 'app-hud',\r\n  templateUrl: './hud.component.html',\r\n  styleUrls: ['./hud.component.css'],\r\n  providers: [HudServiceBus]\r\n})\r\nexport class HudComponent implements OnInit, OnDestroy{\r\n  pieceBinHidden: boolean;\r\n  @Input() hudId: string;\r\n  currentTurn: boolean;\r\n  inProcess: boolean;\r\n\r\n  loadGameSubscription: Subscription;\r\n  playerReadySubscription: Subscription;\r\n  gameStartSubscription: Subscription;\r\n  fireSubscription: Subscription;\r\n  handlePlayerMoveSubscription: Subscription;\r\n  turnEndedSubscription: Subscription;\r\n  damageSubscription: Subscription;\r\n  handleDamageSubscription: Subscription;\r\n  handleAllSunkSubscription: Subscription;\r\n  gameEndedSubscription: Subscription;\r\n\r\n  gameMessage: string;\r\n  placeAllVisible: boolean;\r\n\r\n  @ViewChild('pieceBin') localPieceBin : PieceBinComponent;\r\n  @ViewChild('shipGrid') localShipGrid: ShipGridComponent;\r\n  @ViewChild('attackGrid') localAttackGrid: AttackGridComponent;\r\n\r\n  constructor(private hudServiceBus: HudServiceBus, private gameServiceBus: GameServiceBus) {\r\n    this.pieceBinHidden = false;\r\n    this.placeAllVisible = true;\r\n    this.playerReadySubscription = this.hudServiceBus.hudReadyHandlers$.subscribe(eventArgs => { this.onPlayerReady(eventArgs); });\r\n    this.fireSubscription = this.hudServiceBus.attackHandlers$.subscribe(eventArgs => { this.onAttack(eventArgs); });\r\n    this.damageSubscription = this.hudServiceBus.damageHandlers$.subscribe(eventArgs => { this.onDamageReported(eventArgs); });\r\n    this.handleAllSunkSubscription = this.hudServiceBus.allPiecesSunkHandlers$.subscribe(eventArgs => { this.onAllSunk(eventArgs); });\r\n\r\n    this.loadGameSubscription = this.gameServiceBus.loadGameHandlers$.subscribe(eventArgs => { this.onGameLoaded(eventArgs); });\r\n    this.gameStartSubscription = this.gameServiceBus.gameStartedHandlers$.subscribe(eventArgs => { this.onGameStarted(eventArgs); });\r\n    this.handlePlayerMoveSubscription = this.gameServiceBus.playerMoveHandlers$.subscribe(eventArgs => { this.onHandlePlayerMove(eventArgs); });\r\n    this.handleDamageSubscription = this.gameServiceBus.damageHandlers$.subscribe(eventArgs => { this.onHandleDamageReport(eventArgs); });\r\n    this.turnEndedSubscription = this.gameServiceBus.turnEndedHandlers$.subscribe(eventArgs => { this.onTurnEnded(eventArgs); });\r\n    this.gameEndedSubscription = this.gameServiceBus.gameEndedHandlers$.subscribe(eventArgs => { this.onGameEnded(eventArgs); });\r\n  }\r\n\r\n  ngOnInit() { }\r\n\r\n  ngOnDestroy() {\r\n    // prevent memory leak when component destroyed\r\n    \r\n    this.playerReadySubscription.unsubscribe();\r\n    this.gameStartSubscription.unsubscribe();\r\n    this.fireSubscription.unsubscribe();\r\n    this.damageSubscription.unsubscribe();\r\n    this.handleAllSunkSubscription.unsubscribe();\r\n\r\n    this.loadGameSubscription.unsubscribe();\r\n    this.gameStartSubscription.unsubscribe();\r\n    this.handlePlayerMoveSubscription.unsubscribe();\r\n    this.handleDamageSubscription.unsubscribe();\r\n    this.turnEndedSubscription.unsubscribe();\r\n    this.gameEndedSubscription.unsubscribe();\r\n  }\r\n\r\n  placeAll() {\r\n    while (this.localPieceBin.gamePieces.length > 0) {\r\n      let rowNum: number;\r\n      let cellNum: number;\r\n      let orientation: number;\r\n\r\n      orientation = this.getRandomInt(1, 2);\r\n      rowNum = this.getRandomInt(1, 10);\r\n      cellNum = this.getRandomInt(1, 10);\r\n\r\n      this.localPieceBin.gamePieces[0].vertical = (orientation == 2);\r\n      this.localShipGrid.addShip(this.localPieceBin.gamePieces[0], this.localShipGrid.rows[rowNum].cells[cellNum], null);\r\n    }\r\n    this.placeAllVisible = false;\r\n  }\r\n\r\n  setReady() {\r\n    this.localPieceBin.playerReady();\r\n  }\r\n\r\n  getRandomInt(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1)) + min;\r\n  }\r\n\r\n  /// The game board has reported the hud to set its state to the inital game state\r\n  onGameLoaded(args: LoadGameEventArgs) {\r\n    this.inProcess = false;\r\n    this.currentTurn = false;\r\n    this.pieceBinHidden = false;\r\n    this.gameMessage = '';\r\n    this.placeAllVisible = true;\r\n    // Notify all the hud components that they should set their initial state\r\n    this.hudServiceBus.onHudLoaded(args);\r\n  }\r\n\r\n  /// When the player locks their ship board into place\r\n  onPlayerReady(args: PlayerReadyEventArgs) {\r\n    this.pieceBinHidden = true;\r\n    this.gameServiceBus.onPlayerReady(args);\r\n  }\r\n\r\n  /// When the game is reported to have started, all players have locked in their boards\r\n  onGameStarted(args: GameStartedEventArgs) {\r\n    this.inProcess = true;\r\n    this.currentTurn = args.currentPlayerId == this.hudId;\r\n    this.gameMessage = '';\r\n  }\r\n\r\n  /// When the attack board triggers a fire\r\n  onAttack(args: FireEventArgs) {\r\n    console.log(this.hudId + ' is attacking.');\r\n    let turnEventArgs = new TurnPlayedEventArgs();\r\n    turnEventArgs.currentPlayedId = this.hudId;\r\n    turnEventArgs.targetCell = args.gridCell;\r\n    this.gameServiceBus.onPlayerMove(turnEventArgs);  // Let the game know the target cell and player making the move\r\n  }\r\n\r\n  /// Receiving an event from the game that a player performed a move\r\n  onHandlePlayerMove(args: TurnPlayedEventArgs) {\r\n    if (args.currentPlayedId != this.hudId) {\r\n      this.hudServiceBus.onDefend(args);  // Let the hud's grids receive an attack\r\n    }\r\n  }\r\n\r\n  /// When the ship board reports the result of the move\r\n  onDamageReported(args: DamageReportEventArgs) {\r\n    args.targetPlayerId = this.hudId;\r\n    if (args.targetCell.hitStatus == 1) {\r\n      if (args.targetCell.gamePiece.hitParts.length == args.targetCell.gamePiece.length) {\r\n        this.hudServiceBus.onHandlePieceSunk(args);\r\n      }\r\n    }\r\n    this.gameServiceBus.onDamageHandled(args);  // Let the game know of the damage that occurred\r\n  }\r\n\r\n  /// Receiving an event from the game what a turn ended up doing\r\n  onHandleDamageReport(args: DamageReportEventArgs) {\r\n    if (args.targetPlayerId != this.hudId) {\r\n      this.hudServiceBus.onHandleDamageReport(args);\r\n\r\n      // let the game know who the new current player is\r\n      let turnEventArgs = new TurnEndedEventArgs();\r\n      turnEventArgs.currentPlayerId = args.targetPlayerId;\r\n      this.gameServiceBus.onTurnEnded(turnEventArgs);\r\n    }\r\n  }\r\n\r\n  /// Receiving an event from the game that the players move is over\r\n  onTurnEnded(args: TurnEndedEventArgs) {\r\n    this.currentTurn = args.currentPlayerId == this.hudId;\r\n  }\r\n\r\n  /// All ships were sunk from the ship grid\r\n  onAllSunk(args: PlayerReadyEventArgs) {\r\n    if (args.playerId == this.hudId) {\r\n      this.gameMessage = \"You lost all your ships!\";\r\n\r\n      let gameEndedArgs = new GameEndedEventArgs();\r\n      \r\n      gameEndedArgs.loserId = this.hudId;\r\n      if (this.hudId == \"Player1\") {\r\n        gameEndedArgs.winnerId = \"Player2\";\r\n      } else {\r\n        gameEndedArgs.winnerId = \"Player1\";\r\n      }\r\n      this.inProcess = false;\r\n      this.gameServiceBus.onGameEnded(gameEndedArgs);\r\n    }\r\n  }\r\n\r\n  /// The game service bus reports that a winner has been confirmed\r\n  onGameEnded(args: GameEndedEventArgs) {\r\n    if (args.winnerId == this.hudId) {\r\n      this.gameMessage = \"You won the game!\";\r\n    }\r\n  }\r\n}\r\n","export class LoadGameEventArgs {\n}\n","<div\r\n     style=\"border:1px solid black\"\r\n     (drop)=\"onDrop($event)\"\r\n     (dragover)=\"onDragOver($event)\"\r\n     (dragleave)=\"onDragLeave($event)\">\r\n  <h2 [hidden]=\"gamePieces.length == 0\">Game Pieces for player {{hudId}}</h2>\r\n  <div [hidden]=\"gamePieces.length == 0\">{{gameBinMessage}}</div>\r\n  <select [(ngModel)]=\"selectedOrientation\" [hidden]=\"gamePieces.length == 0\">\r\n    <option *ngFor=\"let orientation of orientations\" [value]=\"orientation\">{{orientation}}</option>\r\n  </select>\r\n  <ul>\r\n    <li *ngFor=\"let piece of gamePieces\" (dragstart)=\"drag($event,piece)\" draggable=\"true\">{{piece.name}}</li>\r\n  </ul>\r\n  <button [hidden]=\"gamePieces.length > 0\" (click)=\"playerReady()\">Ready</button>\r\n</div>\r\n","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\r\nimport { GamePieceBin } from '../game-piece-bin';\r\nimport { gamePiece } from '../game-piece';\r\nimport { PiecePlacedEventArgs } from '../piece-placed-event-args';\r\nimport { CellDropErrorEventArgs } from '../cell-drop-error-event-args';\r\nimport { HudServiceBus } from '../hud-service-bus';\r\nimport { Subscription } from 'rxjs';\r\nimport { PlayerReadyEventArgs } from '../player-ready-event-args';\r\nimport { gridCell } from '../grid-cell';\r\nimport { LoadGameEventArgs } from '../load-game-event-args';\r\n\r\n@Component({\r\n  selector: 'app-piece-bin',\r\n  templateUrl: './piece-bin.component.html',\r\n  styleUrls: ['./piece-bin.component.css']\r\n})\r\n\r\nexport class PieceBinComponent extends GamePieceBin implements OnInit, OnDestroy {\r\n  selectedOrientation: string;\r\n  gameBinMessage: string;\r\n  loadHudSubscription: Subscription;\r\n  playerReadySubscription: Subscription;\r\n  pieceNotPlacedSubscription: Subscription;\r\n  @Input() playerId: string;\r\n  @Input() hudId: string;\r\n\r\n  constructor(private hudServiceBus: HudServiceBus) {\r\n    super();\r\n    this.loadHudSubscription = this.hudServiceBus.loadHudHandlers$.subscribe(eventArgs => { this.onHudLoad(eventArgs); });\r\n    this.playerReadySubscription = this.hudServiceBus.piecePlaceHandlers$.subscribe(eventArgs => { this.onPiecePlaced(eventArgs); });\r\n    this.pieceNotPlacedSubscription = this.hudServiceBus.pieceNotPlacedHandlers$.subscribe(eventArgs => { this.onGamePieceNotPlace(eventArgs); });\r\n    this.selectedOrientation = \"Horizontal\";\r\n\r\n  }\r\n\r\n  ngOnInit() {  }\r\n\r\n  ngOnDestroy() {\r\n    // prevent memory leak when component destroyed\r\n    this.playerReadySubscription.unsubscribe();\r\n    this.pieceNotPlacedSubscription.unsubscribe();\r\n  }\r\n\r\n  onHudLoad(eventArgs: LoadGameEventArgs) {\r\n    this.selectedOrientation = \"Horizontal\";\r\n    this.loadPieces();\r\n  }\r\n\r\n  drag(ev, gamePiece: gamePiece) {\r\n    this.gameBinMessage = '';\r\n    ev.dataTransfer.setData(\"hudId\", this.hudId);\r\n    gamePiece.vertical = (this.selectedOrientation == \"Vertical\");\r\n    ev.dataTransfer.setData(\"gamePiece\", JSON.stringify(gamePiece));\r\n  }\r\n\r\n  onPiecePlaced(eventArgs: PiecePlacedEventArgs) {\r\n    var index = this.gamePieces.findIndex(function (element) { return element.id == eventArgs.gamePiece.id });\r\n    this.gamePieces.splice(index, 1);\r\n  }\r\n\r\n  onGamePieceNotPlace(eventArgs: CellDropErrorEventArgs) {\r\n    this.gameBinMessage = eventArgs.message;\r\n  }\r\n\r\n  playerReady() {\r\n    var args = new PlayerReadyEventArgs();\r\n    args.playerId = this.hudId;\r\n    this.hudServiceBus.onHudReady(args);\r\n  }\r\n\r\n  onDrop(event) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    if (event.dataTransfer.getData(\"hudId\") != this.hudId) {\r\n      return;\r\n    }\r\n    if (!event.dataTransfer.getData(\"gamePiece\") || !event.dataTransfer.getData(\"sourceCell\")) {\r\n      return;\r\n    }\r\n    let targetCell = JSON.parse(event.dataTransfer.getData(\"sourceCell\")) as gridCell;\r\n    if (targetCell.row == 0 || targetCell.cell == 0) {\r\n      return;\r\n    }\r\n    let gamePiece = JSON.parse(event.dataTransfer.getData(\"gamePiece\")) as gamePiece;\r\n    this.gamePieces.push(gamePiece);\r\n\r\n    let pieceReturnedArgs = new PiecePlacedEventArgs();\r\n    pieceReturnedArgs.gamePiece = gamePiece;\r\n    pieceReturnedArgs.gridCell = targetCell;\r\n    this.hudServiceBus.onPieceReturned(pieceReturnedArgs);\r\n  }\r\n\r\n  onDragOver(evt) {\r\n    evt.preventDefault();\r\n    evt.stopPropagation();\r\n  }\r\n\r\n  onDragLeave(evt) {\r\n    evt.preventDefault();\r\n    evt.stopPropagation();\r\n  }\r\n\r\n}\r\n","import { gamePiece } from \"./game-piece\";\r\nimport { gridCell } from \"./grid-cell\";\r\n\r\nexport class PiecePlacedEventArgs {\r\n  gamePiece: gamePiece;\r\n  gridCell: gridCell;\r\n  hud: string;\r\n}\r\n","export class PlayerReadyEventArgs {\n  playerId: string;\n}\n","<h2>\r\n  Ships\r\n</h2>\r\n<table class=\"hud no-spacing\">\r\n  <tr *ngFor=\"let row of rows;index as i\">\r\n    <td *ngFor=\"let cell of row.cells;index as j\"\r\n        class=\"{{cell.cssClass}}\"\r\n        [class.occupiedSpace]=\"cell.occupied\"\r\n        (dragover)=\"onDragOver($event)\"\r\n        (dragleave)=\"onDragLeave($event)\"\r\n        (drop)=\"onDrop($event, cell)\"\r\n        [draggable]=\"boardDraggable && i > 0 && j > 0\"\r\n        (dragstart)=\"onDrag($event,cell)\"\r\n        [ngClass]=\"{\r\n          'is-hit': cell.hitStatus == 1,\r\n          'is-miss':cell.hitStatus == 2\r\n        }\">{{cell.text}}\r\n    </td>\r\n  </tr>\r\n</table>\r\n\r\n<div [hidden]=\"sunkShips.length == 0\">\r\n  Sunken Ships\r\n  <ul>\r\n    <li *ngFor=\"let ship of sunkShips\">\r\n      {{ship.name}}\r\n    </li>\r\n  </ul>\r\n</div>\r\n","import { Component, OnInit, Output, EventEmitter, OnDestroy, Input } from '@angular/core';\r\nimport { gameGrid } from '../game-grid';\r\nimport { gamePiece } from '../game-piece';\r\nimport { gridCell } from '../grid-cell';\r\nimport { PiecePlacedEventArgs } from '../piece-placed-event-args';\r\nimport { CellDropErrorEventArgs } from '../cell-drop-error-event-args';\r\nimport { HudServiceBus } from '../hud-service-bus';\r\nimport { Subscription } from 'rxjs';\r\nimport { PlayerReadyEventArgs } from '../player-ready-event-args';\r\nimport { TurnPlayedEventArgs } from '../turn-played-event-args';\r\nimport { DamageReportEventArgs } from '../damage-report-event-args';\r\nimport { LoadGameEventArgs } from '../load-game-event-args';\r\n\r\n@Component({\r\n  selector: 'app-ship-grid',\r\n  templateUrl: './ship-grid.component.html',\r\n  styleUrls: ['./ship-grid.component.css']\r\n})\r\n\r\nexport class ShipGridComponent extends gameGrid implements OnInit, OnDestroy {\r\n  @Input() hudId: string;\r\n  boardDraggable: boolean;\r\n  sunkShips: gamePiece[];\r\n  shipCount: number;\r\n\r\n  loadHudSubscription: Subscription;\r\n  playerReadySubscription: Subscription;\r\n  defendSubscription: Subscription;\r\n  pieceSunkSubscription: Subscription;\r\n  pieceReturnedSubscription: Subscription;\r\n\r\n  constructor(private hudServiceBus: HudServiceBus) {\r\n    super();\r\n    this.boardDraggable = true;\r\n    this.sunkShips = [];\r\n    this.shipCount = 0;\r\n\r\n    this.loadHudSubscription = this.hudServiceBus.loadHudHandlers$.subscribe(eventArgs => { this.onHudLoad(eventArgs); });\r\n    this.playerReadySubscription = this.hudServiceBus.hudReadyHandlers$.subscribe(eventArgs => { this.onPlayerReady(eventArgs); });\r\n    this.defendSubscription = this.hudServiceBus.defendHandlers$.subscribe(eventArgs => { this.onDefend(eventArgs); });\r\n    this.pieceSunkSubscription = this.hudServiceBus.pieceSunkHandlers$.subscribe(eventArgs => { this.onPieceSunk(eventArgs); });\r\n    this.pieceReturnedSubscription = this.hudServiceBus.pieceReturnedHandlers$.subscribe(eventArgs => { this.onPieceReturned(eventArgs); });\r\n  }\r\n\r\n  ngOnInit() { }\r\n\r\n  ngOnDestroy() {\r\n    // prevent memory leak when component destroyed\r\n    this.playerReadySubscription.unsubscribe();\r\n    this.defendSubscription.unsubscribe();\r\n    this.pieceSunkSubscription.unsubscribe();\r\n    this.pieceReturnedSubscription.unsubscribe();\r\n  }\r\n\r\n  onHudLoad(eventArgs: LoadGameEventArgs) {\r\n    this.boardDraggable = true;\r\n    this.sunkShips = [];\r\n    this.shipCount = 0;\r\n    this.reset();\r\n  }\r\n\r\n  onDrop(event, targetCell : gridCell) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    if (!event.dataTransfer.getData(\"gamePiece\")) {\r\n      return;\r\n    }\r\n    if (event.dataTransfer.getData(\"hudId\") != this.hudId) {\r\n      return;\r\n    }\r\n    if (targetCell.row == 0 || targetCell.cell == 0) {\r\n      return;\r\n    }\r\n    var gamePiece = JSON.parse(event.dataTransfer.getData(\"gamePiece\")) as gamePiece;\r\n    let sourceCell = null;\r\n    if (event.dataTransfer.getData(\"sourceCell\")) {\r\n      sourceCell = JSON.parse(event.dataTransfer.getData(\"sourceCell\")) as gridCell;\r\n    }\r\n    \r\n    this.addShip(gamePiece, targetCell, sourceCell);\r\n    \r\n  }\r\n\r\n  addShip(gamePiece: gamePiece, targetCell: gridCell, _sourceCell: gridCell) {\r\n    let sourceCell: gridCell = null;\r\n    if (_sourceCell) {\r\n      sourceCell = _sourceCell;\r\n    }\r\n    // is the target drop cell already occupied\r\n    if (targetCell.occupied) {\r\n      if (sourceCell == null) {\r\n        this.raisePieceNotPlaced(\"Cell already occupied\", targetCell);\r\n        return;\r\n      } else {\r\n        if (sourceCell.gamePiece.id != targetCell.gamePiece.id) {\r\n          this.raisePieceNotPlaced(\"Cell already occupied\", targetCell);\r\n          return;\r\n        }\r\n      }\r\n    }\r\n\r\n    let startIndex: number = -1;\r\n    let endIndex: number = -1;\r\n    if (gamePiece.vertical) {\r\n      startIndex = targetCell.row;\r\n      endIndex = targetCell.row + gamePiece.length;\r\n    } else {\r\n      startIndex = targetCell.cell;\r\n      endIndex = targetCell.cell + gamePiece.length;\r\n    }\r\n    let length: number = gamePiece.length;\r\n    let gamePieceIndex: number = 0;\r\n\r\n    if (sourceCell) {\r\n      startIndex = startIndex - sourceCell.gamePieceIndex;\r\n      endIndex = gamePiece.length + startIndex;\r\n      length = gamePiece.length;\r\n    }\r\n    if (gamePiece.vertical) {\r\n      // is the piece too long to fit\r\n      if (endIndex > this.rowCount) {\r\n        this.raisePieceNotPlaced(\"Piece is too long\", targetCell);\r\n        return;\r\n      }\r\n\r\n      for (var i: number = startIndex; i < endIndex; i++) {\r\n        if (this.rows[i].cells[targetCell.cell].occupied) {\r\n          if (sourceCell == null) {\r\n            this.raisePieceNotPlaced(\"Piece overlaps other pieces\", targetCell);\r\n            return;\r\n          } else {\r\n            if (sourceCell.gamePiece.id != this.rows[i].cells[targetCell.cell].gamePiece.id) {\r\n              this.raisePieceNotPlaced(\"Piece overlaps other pieces\", targetCell);\r\n              return;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      if (sourceCell) {\r\n        // We moved the piece, but let's remove the occupation before placing anew\r\n        this.onPieceMoved(sourceCell);\r\n      }\r\n      // if we have passed validation, drop the piece onto the board\r\n      for (var i: number = startIndex; i < endIndex; i++) {\r\n        this.rows[i].cells[targetCell.cell].occupied = true;\r\n        this.rows[i].cells[targetCell.cell].gamePiece = gamePiece;\r\n        this.rows[i].cells[targetCell.cell].gamePieceIndex = gamePieceIndex;\r\n        gamePieceIndex++;\r\n      }\r\n    } else {\r\n      // is the piece too long to fit\r\n      if (endIndex > this.cellCount) {\r\n        this.raisePieceNotPlaced(\"Piece is too long\", targetCell);\r\n        return;\r\n      }\r\n\r\n      for (var i: number = startIndex; i < endIndex; i++) {\r\n        if (this.rows[targetCell.row].cells[i].occupied) {\r\n          if (sourceCell == null) {\r\n            this.raisePieceNotPlaced(\"Piece overlaps other pieces\", targetCell);\r\n            return;\r\n          } else {\r\n            if (sourceCell.gamePiece.id != this.rows[targetCell.row].cells[i].gamePiece.id) {\r\n              this.raisePieceNotPlaced(\"Piece overlaps other pieces\", targetCell);\r\n              return;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      if (sourceCell) {\r\n        // We moved the piece, but let's remove the occupation before placing anew\r\n        this.onPieceMoved(sourceCell);\r\n      }\r\n      // if we have passed validation, drop the piece onto the board\r\n      for (var i: number = startIndex; i < endIndex; i++) {\r\n        this.rows[targetCell.row].cells[i].occupied = true;\r\n        this.rows[targetCell.row].cells[i].gamePiece = gamePiece;\r\n        this.rows[targetCell.row].cells[i].gamePieceIndex = gamePieceIndex;\r\n        gamePieceIndex++;\r\n      }\r\n    }\r\n\r\n    if (!sourceCell) {\r\n      var eventArgs = new PiecePlacedEventArgs();\r\n      eventArgs.gamePiece = gamePiece;\r\n      eventArgs.gridCell = targetCell;\r\n      this.hudServiceBus.onPiecePlaced(eventArgs);\r\n      this.shipCount++;\r\n    }\r\n  }\r\n\r\n  onDragOver(evt) {\r\n    evt.preventDefault();\r\n    evt.stopPropagation();\r\n  }\r\n\r\n  onDragLeave(evt) {\r\n    evt.preventDefault();\r\n    evt.stopPropagation();\r\n  }\r\n\r\n  onDrag(ev, targetCell: gridCell) {\r\n    ev.stopPropagation();\r\n    if (!this.boardDraggable) {\r\n      return;\r\n    }\r\n    if (targetCell.gamePiece) {\r\n      var gamePieceJson = JSON.stringify(targetCell.gamePiece);\r\n      var cellJson = JSON.stringify(targetCell);\r\n      ev.dataTransfer.setData(\"gamePiece\", gamePieceJson);\r\n      ev.dataTransfer.setData(\"sourceCell\", cellJson);\r\n      ev.dataTransfer.setData(\"hudId\", this.hudId);\r\n    }\r\n  }\r\n\r\n  raisePieceNotPlaced(message: string, targetCell: gridCell) {\r\n    var ret = new CellDropErrorEventArgs();\r\n    ret.gridCell = targetCell;\r\n    ret.message = message;\r\n    this.hudServiceBus.onPieceNotPlaced(ret);\r\n  }\r\n\r\n  onPieceMoved(sourceCell: gridCell) {\r\n    var initial = sourceCell.gamePieceIndex;\r\n    var end = sourceCell.gamePiece.length - initial;\r\n    \r\n    if (sourceCell.gamePiece.vertical) {\r\n      for (var i: number = sourceCell.gamePieceIndex; i > 0; i--) {\r\n        this.rows[sourceCell.row - i].cells[sourceCell.cell].unsetCell();\r\n      }\r\n\r\n      this.rows[sourceCell.row].cells[sourceCell.cell].unsetCell();\r\n\r\n      for (var i: number = 1; i < sourceCell.gamePiece.length - sourceCell.gamePieceIndex; i++) {\r\n        this.rows[sourceCell.row + i].cells[sourceCell.cell].unsetCell();\r\n      }\r\n    } else {\r\n      for (var i: number = sourceCell.gamePieceIndex; i > 0; i--) {\r\n        this.rows[sourceCell.row].cells[sourceCell.cell - i].unsetCell();\r\n      }\r\n      this.rows[sourceCell.row].cells[sourceCell.cell].unsetCell();\r\n      for (var i: number = 1; i < sourceCell.gamePiece.length - sourceCell.gamePieceIndex; i++) {\r\n        this.rows[sourceCell.row].cells[sourceCell.cell + i].unsetCell();\r\n      }\r\n    }\r\n    \r\n  }\r\n\r\n  onPlayerReady(eventArgs: PlayerReadyEventArgs) {\r\n    this.boardDraggable = false;\r\n  }\r\n\r\n  onDefend(eventArgs: TurnPlayedEventArgs) {\r\n    for (let i: number = 1; i < this.rowCount; i++) {\r\n      for (let j: number = 1; j < this.cellCount; j++) {\r\n        if (eventArgs.targetCell.row == i && eventArgs.targetCell.cell == j) {\r\n          let cell = this.rows[i].cells[j];\r\n          if (cell.occupied) {\r\n            cell.hitStatus = 1;\r\n            cell.gamePiece.hitParts.push(cell.gamePieceIndex);\r\n          } else {\r\n            cell.hitStatus = 2;\r\n          }\r\n\r\n          let damageReport = new DamageReportEventArgs();\r\n          damageReport.targetCell = this.rows[i].cells[j];\r\n          this.hudServiceBus.onDamageReport(damageReport);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  onPieceSunk(eventArgs: DamageReportEventArgs) {\r\n    this.sunkShips.push(eventArgs.targetCell.gamePiece);\r\n\r\n    if (this.shipCount == this.sunkShips.length) {\r\n      let allSunkArgs = new PlayerReadyEventArgs();\r\n      allSunkArgs.playerId = this.hudId;\r\n      this.hudServiceBus.onAllPiecesSunk(allSunkArgs);\r\n    }\r\n  }\r\n\r\n  onPieceReturned(eventArgs: PiecePlacedEventArgs) {\r\n    if (eventArgs.hud != this.hudId) {\r\n      return;\r\n    }\r\n    let sourceCell = eventArgs.gridCell;\r\n    if (sourceCell.gamePiece.vertical) {\r\n      for (var i: number = sourceCell.gamePieceIndex; i > 0; i--) {\r\n        this.rows[sourceCell.row - i].cells[sourceCell.cell].unsetCell();\r\n      }\r\n\r\n      this.rows[sourceCell.row].cells[sourceCell.cell].unsetCell();\r\n\r\n      for (var i: number = 1; i < sourceCell.gamePiece.length - sourceCell.gamePieceIndex; i++) {\r\n        this.rows[sourceCell.row + i].cells[sourceCell.cell].unsetCell();\r\n      }\r\n    } else {\r\n      for (var i: number = sourceCell.gamePieceIndex; i > 0; i--) {\r\n        this.rows[sourceCell.row].cells[sourceCell.cell - i].unsetCell();\r\n      }\r\n      this.rows[sourceCell.row].cells[sourceCell.cell].unsetCell();\r\n      for (var i: number = 1; i < sourceCell.gamePiece.length - sourceCell.gamePieceIndex; i++) {\r\n        this.rows[sourceCell.row].cells[sourceCell.cell + i].unsetCell();\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n","export class TurnEndedEventArgs {\n  currentPlayerId: string;\n}\n","import { gridCell } from \"./grid-cell\";\r\n\r\nexport class TurnPlayedEventArgs {\r\n  currentPlayedId: string;\r\n  targetCell: gridCell;\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}